version: '3.8'

services:
  # ============================================================================
  # Aplicação AutoDocIA
  # ============================================================================
  az_etp_app:
    image: autodoc-ia:2.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autodoc-ia-app
    restart: unless-stopped
    profiles: ["dev", "prod"]
    env_file:
      - .env
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

    ports:
      - "${APP_PORT:-5002}:5002"
    volumes:
      - ./knowledge:/app/knowledge:ro
      - ./rag/index:/app/rag/index
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - autodoc-network

  # ============================================================================
  # PostgreSQL
  # ============================================================================
  db:
    image: postgres:15-alpine
    container_name: autodoc-ia-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: az_etp_db
      POSTGRES_USER: az_etp_user
      POSTGRES_PASSWORD: az_etp_password_2024

    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U az_etp_user -d az_etp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - autodoc-network

volumes:
  postgres_data:
    driver: local

networks:
  autodoc-network:
    driver: bridge
